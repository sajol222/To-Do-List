{"version":3,"sources":["Components/Form.js","Components/Section.js","Components/Todo.js","Components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Form","add","useState","inputValue","SetInputValue","className","onSubmit","e","preventDefault","trim","title","completed","type","placeholder","onChange","target","value","Section","props","style","margin","children","Todo","removeTodo","complete","isEdit","isEditing","setValue","tempValue","setTempValue","setCompleted","onKeyDown","key","keyCode","autoFocus","onDoubleClick","onClick","oldCompleted","List","list","renderdList","map","item","id","listTitle","App","todolist","settodolist","oldList","concat","oldlist","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39a6ad19.chunk.js","sourcesContent":["import React,{useState} from 'react'\n\nconst Form =({add})=>{\n\n\tconst [inputValue, SetInputValue]=useState(\"\");\n\n\tconst handleInputValue=(e)=>{\n\t\tSetInputValue(e.target.value);\n\t};\n\tconst handleFormSubmit=(e)=>{\n\t\te.preventDefault()\n\t\tif(inputValue.trim()==='')return\n\t\tadd({title : inputValue, completed : false})\n\t\t\n\t}\n\treturn(\n\t\t<form className='ui form' onSubmit={handleFormSubmit}>\n\t\t\t<div className='ui grid center aligned'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='column five wide'>\n\t\t\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\t\t   placeholder=\"Add Something here...\"\n\t\t\t\t\t\t\t   onChange={handleInputValue}\n\t\t\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='column one wide'>\t\n\t\t\t\t\t\t<button type='submit' \n\t\t\t\t\t\t\t\tclassName='ui button circular icon green'\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t>\t\t\n\t\t\t\t\t\t\t\t<i className=\"plus icon\"></i>\n\n\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t</form>\n\n\t\t)\n}\nexport default Form;","import React from 'react';\n\nconst Section =(props)=> {\n\treturn(\n\t\t<div style={{ margin :\"20px\"}} >\n\t\t\t{props.children}\n\t\t</div>\n\t\t)\n}\nexport default Section;","import React,{useState} from 'react'\n\nconst Todo =({removeTodo,title,complete})=>{\n\n\tconst [isEdit,isEditing]=useState(false)\n\tconst [value ,setValue]=useState(title)\n\tconst [tempValue,setTempValue]=useState(title)\n\tconst [completed,setCompleted]=useState(complete)\n\n\tconst handleDouble=()=>{\n\t\tisEditing(true)\n\t}\n\n\tconst handleKey=(e)=>{\n\t\tconst key=e.keyCode;\n\n\t\tif(key===13 ){\n\t\t\tisEditing(false)\n\t\t\tsetValue(tempValue)\n\t\t}\n\t\telse if(key===27){\n\t\t\tisEditing(false)\n\t\t\tsetValue(value)\n\t\t\tsetTempValue(value)\n\t\t}\n\t}\n\tconst handleText=(e)=>{\n\t\tsetTempValue(e.target.value);\n\t}\n\tconst handleClickCheck=()=>{\n\t\tsetCompleted((oldCompleted)=>!oldCompleted)\n\t}\n\treturn (\n\t\tisEdit ?\n\t\t\t<div className='row'>\n\t\t\t\t<div className='column seven wide'>\n\t\t\t\t\t<div className='ui input fluid'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tonKeyDown={handleKey}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tonChange={handleText}\n\t\t\t\t\t\t\tvalue={tempValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t    :\n\t\t\t<div className='row'  >\n\t\t\t\t<div className='column five wide' onDoubleClick={handleDouble}>\n\t\t\t\t\t<h2\n\t\t\t\t\t\t\t className={'ui header' + (completed ? ' green' : '' ) }\n\t\t\t\t\t\t\t >\n\t\t\t\t\t\t\t {value}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className='column one wide'>\n\t\t\t\t\t<button className={'ui button circular icon' +( completed ? ' blue' : ' green') }\n\t\t\t\t\t\t\t\t\tonClick={handleClickCheck}\n\t\t\t\t\t>\n       \t\t\t\t\t<i className='check icon '></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='column one wide'>\n\t\t\t\t\t<button className='ui button circular icon red'\n\t\t\t\t\t\t\t\t\t onClick={removeTodo}\n\t\t\t\t\t>\n       \t\t\t\t\t<i className='remove icon '></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t\t)\n}\nexport default Todo;","import React from 'react';\n\nimport Todo from './Todo'\n\n\nconst List =({list,removeTodo})=>{\n\n\tconst renderdList = list.map((item)=>{\n\t\treturn(\n\t\t<Todo title={item.title} complete ={item.completed} removeTodo={(e)=>removeTodo(item.id)} />\n\t\t)\n\t})\n\treturn(\n\t\t<div className='ui grid center aligned '>\n\t\t\t{renderdList}\n\t\t</div>\n\n\t\t)\n\t\n}\nexport default List;","import React,{useState}  from 'react';\nimport Form from './Components/Form'\nimport Section from './Components/Section'\nimport List from './Components/List'\n\n\nconst appTitle = 'To-do-List'\nconst listTitle = [\n\t{  id: 1,title :  'Test #1', completed : false},\n\t{  id: 2,title : 'Test #2' ,completed : false},\n\t{  id: 3,title : 'Test #3', completed : false}\n]\n\n\nconst App =()=>{\n\n\tconst [todolist,settodolist]=useState(listTitle);\n\n\tconst addList= (item) => {\n\t\tsettodolist((oldList)=>oldList.concat(item))\n\t}\n\tconst removeTodo=(id)=>{\n\t\tsettodolist((oldlist)=>oldlist.filter((item)=> item.id !== id))\n\t}\n\n\treturn(\n\n\t\t<div className='ui container center aligned'>\n\t\t<Section>\n\t\t\t<h1 >{appTitle}</h1>\n\t\t</Section>\n\t\t\n\t\t<Section>\n\t\t\t<Form add={addList}/>\n\t\t</Section>\n\t\t\t\n\t\t<Section>\n\t\t\t<List list = {todolist} removeTodo={removeTodo}/>\n\t\t</Section>\n\t\t\t\n\t\t</div>\n\n\t\t\t)\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}